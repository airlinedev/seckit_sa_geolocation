<?xml version='1.0' encoding='UTF-8'?>
<testsuites>
  <testsuite errors="0" failures="2" manual_checks="0" name="Splunk AppInspect" skipped="204" tests="214" time="0.336648" timestamp="2020-02-15T13:10:29.733841" warnings="0">
    <properties>
      <property name="app_name" value="SecKit_SA_geolocation"/>
      <property name="included_tags" value=""/>
      <property name="excluded_tags" value="manual"/>
    </properties>
    <testcase classname="check_packaging_standards" name="check_that_extracted_splunk_app_contains_default_app_conf_file" time="0.000375">
      <system-out>Check that the extracted Splunk App contains a default/app.conf
 file.</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_extracted_splunk_app_contains_default_app_conf_file_with_valid_version_number" time="0.000893">
      <system-out>Check that the extracted Splunk App contains a default/app.conf file
 that contains an [id] or [launcher] stanza with a version property that
 is formatted as Major.Minor.Revision.</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_extracted_splunk_app_does_not_contain_files_with_invalid_permissions" time="0.029295">
      <system-out>Check that the extracted Splunk App does not contain any files
 with incorrect permissions. Files must have the owner's
 permissions include read and write (600).</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_extracted_splunk_app_does_not_contain_invalid_directories" time="0.017018">
      <system-out>Check that the extracted Splunk App does not contain any directories
 with incorrect permissions. Directories and sub directories
 must have the owner's permissions set to r/w/x (700).</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_extracted_splunk_app_does_not_contain_prohibited_directories_or_files" time="0.084724">
      <system-out>Check that the extracted Splunk App does not contain any directories or
 files that start with a ., or directories that start with __MACOSX.</system-out>
      <failure message="check_packaging_standards.py">A prohibited file or directory was found in the extracted Splunk App: bin/.DS_Store, A prohibited file or directory was found in the extracted Splunk App: bin/geoipupdate/.DS_Store, A prohibited file or directory was found in the extracted Splunk App: appserver/.DS_Store</failure>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_does_not_contain_files_outside_of_app" time="0.02332">
      <system-out>Check that the Splunk App package does not contain any non-app files.
 Files within a valid app folder or valid dependencies within a .dependencies
 folder are permitted, all other files are not.</system-out>
      <failure message="check_packaging_standards.py">A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : README, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : README.txt, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : SecKit_SA_geolocation.aob_meta, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : aob_events_in_meta.json, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : app.manifest, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : appserver, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : bin, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : data, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : default, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : local, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : metadata, A file or folder was found outside of the app within the overall package. OR the file or folder does not have expected permission. Please remove this file or folder OR modify the permission : static</failure>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_extracts_to_visible_directory" time="0.000122">
      <system-out>Check that the compressed artifact extracts to a directory that does not
 start with a . character.</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_has_read_permission" time="8.9e-05">
      <system-out>Check that the Splunk app provided does not contain incorrect permissions.
 Packages must have have the owner's read permission set to r (400).</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_has_valid_static_dependencies" time="0.000537">
      <system-out>Check that the Splunk App package contains only valid dependencies.
 Dependencies are valid if a .dependencies directory contains only valid
 app packages inside.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_name_does_not_start_with_period" time="4.8e-05">
      <system-out>Check that the Splunk app provided does not start with a .
 character.</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_valid_compressed_file" time="2.6e-05">
      <system-out>Check that the Splunk app provided a valid compressed file.</system-out>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_with_static_dependencies_has_app_manifest" time="0.000362">
      <system-out>Check that the Splunk App package with a .dependencies directory also
 contains an app folder with an app.manifest.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_packaging_standards" name="check_that_splunk_app_package_with_static_dependencies_has_exactly_one_app_folder" time="0.000361">
      <system-out>Check that the Splunk App package with a .dependencies directory also
 contains exactly one valid app folder.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_authentication_configuration_file" name="check_authentication_conf_does_not_have_binddnpassword_property" time="0.000654">
      <system-out>Check that stanzas in authentication.conf do not use the the
 bindDNpassword property.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_authentication_configuration_file" name="check_saml_auth_should_not_turn_off_signed_assertion" time="0.0005">
      <system-out>Check that saml-* stanzas in authentication.conf do not turn off signedAssertion property</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_authorize_configuration_file" name="check_authorize_conf_capability_not_modified" time="0.00051">
      <system-out>Check that authorize.conf does not contain any modified capabilities.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_audit_conf_black_list" time="0.000439">
      <system-out>Check that app does not contain audit.conf, as it is prohibited in
 Splunk Cloud due to its ability to configure/disable cryptographic signing
 and certificates.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_authorize_conf_admin_all_objects_privileges" time="0.000774">
      <system-out>Check that authorize.conf does not grant excessive administrative
 permissions to the user.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_datatypesbnf_conf_black_list" time="0.00057">
      <system-out>Check that app does not contain datatypesbnf.conf, as it is prohibited
 in Splunk Cloud.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_default_data_ui_views_directory_file_white_list" time="0.000596">
      <system-out>Check that default/data/ui/views contains only allowed files.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_default_mode_conf_black_list" time="0.000612">
      <system-out>Check that app does not contain default-mode.conf is as it is
 prohibited in Splunk Cloud due to the fact that Splunk Light Forwarders and
 Splunk Universal Forwarders are not run in Splunk Cloud.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_deployment_conf_black_list" time="0.000753">
      <system-out>Check that app does not contain deployment.conf. Apps should leave
 deployment configuration up to Splunk administrators.
Also, deployment.conf has been removed and replaced by:
 1) deploymentclient.conf - for configuring Deployment Clients
 2) serverclass.conf - for Deployment Server server class configuration.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_deploymentclient_conf_black_list" time="0.000834">
      <system-out>Check that app does not contain deploymentclient.conf as it configures
 the deployment server client. Apps should leave deployment configuration up
 to Splunk administrators.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_distsearch_conf_for_concerning_replicated_file_size" time="0.001045">
      <system-out>Check if concerningReplicatedFileSize in distsearch.conf is larger 
 than 50 MB.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_for_implementing_tscollect" time="0.000921">
      <system-out>Check that use of
 'tscollect'
 in .conf filesl and dashboard xmls then fail it.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_for_index_volume_usage" time="0.000794">
      <system-out>Check that indexes.conf does not declare volumes.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_indexes_conf_only_uses_splunk_db_variable" time="0.000765">
      <system-out>Check that indexes defined in indexes.conf use relative paths starting
 with $SPLUNK_DB.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_batch" time="0.000588">
      <system-out>Check that batch input accesses files in a permitted way.
To be permissible, the batch input must meet the following criteria:
 1) The file path needs to match a file in the directory "$SPLUNK_HOME/var/spool/splunk/"
 2) The file name needs to be application specific "$SPLUNK_HOME/etc/apps/"
 3) The file name should not end with "stash" or "stash_new"</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_fschange" time="0.000517">
      <system-out>Check that default/inputs.conf or local/inputs.conf does not contain a fschange
 stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_global_settings" time="0.000513">
      <system-out>Check that default/inputs.conf or local/inputs.conf does not use any global settings.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_http_global_usage" time="0.000535">
      <system-out>Check that default/inputs.conf or local/inputs.conf does not contain a [http]
 stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_splunk_tcp" time="0.00062">
      <system-out>Check that default/inputs.conf or local/inputs.conf does not contain a splunktcp
 stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_splunktcptoken" time="0.000566">
      <system-out>Check that default/inputs.conf or local/inputs.conf does not contain a splunktcptoken
 stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_ssl" time="0.00067">
      <system-out>Check that inputs.conf does not have any SSL inputs.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_tcp" time="0.000473">
      <system-out>Check that default/inputs.conf or local/inputs.conf does not contain a tcp stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_inputs_conf_for_udp" time="0.000595">
      <system-out>Check that inputs.conf does not have any UDP inputs.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_instance_cfg_conf_black_list" time="0.000497">
      <system-out>Check that app does not contain instance.cfg.conf. Apps should not
 configure server/instance specific settings.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_introspection_of_cloud_filesystem" time="0.000574">
      <system-out>Check that app does not contain crawl.conf
 as it allows Splunk to introspect the filesystem which is not
 permitted in Splunk Cloud.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_literals_conf_black_list" time="0.000597">
      <system-out>Check that app does not contain literals.conf. Apps should not
 alter/override text strings displayed in Splunk Web.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_lookups_white_list" time="0.000516">
      <system-out>Check that lookups/ contains only approved file types (.csv,
 .csv.default, .csv.gz, .csv.tgz, .kmz) or files formatted as valid csv.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_messages_conf_black_list" time="0.000466">
      <system-out>Check that app does not contain messages.conf. Apps should not
 alter/override messages/externalized strings.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_metadata_white_list" time="0.000518">
      <system-out>Check that the metadata/ directory only contains .meta files.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_modular_inputs_scripts_exist_for_cloud" time="0.000511">
      <system-out>Check that there is a script file in bin/ for each modular input
 defined in README/inputs.conf.spec.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_outputs_conf_black_list" time="0.000565">
      <system-out>Check that app does not contain outputs.conf as forwarding is not
 permitted in Splunk Cloud.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_pubsub_conf_black_list" time="0.000422">
      <system-out>Check that app does not contain pubsub.conf as it defines a custom
 client for the deployment server. Apps should leave deployment
 configuration up to Splunk administrators.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_segmenters_conf_black_list" time="0.00049">
      <system-out>Check that app does not contain segmenters.conf. A misconfigured
 segmenters.conf can result in unsearchable data that could only be
 addressed by re-indexing and segmenters.conf configuration is system-wide.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_serverclass_conf_black_list" time="0.00064">
      <system-out>Check that app does not contain serverclass.conf as it defines
 deployment server classes for use with deployment server. Apps should
 leave deployment configuration up to Splunk administrators.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_serverclass_seed_xml_conf_black_list" time="0.000519">
      <system-out>Check that app does not contain serverclass.seed.xml.conf as it
 configures deploymentClient to seed a Splunk installation with applications
 at startup time. Apps should leave deployment configuration up to Splunk
 administrators.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_source_classifier_conf_black_list" time="0.00066">
      <system-out>Check that app does not contain source-classifier.conf.conf as it
 configures system-wide settings for ignoring terms (such as sensitive
 data).</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_sourcetypes_conf_black_list" time="0.000425">
      <system-out>Check that app does not contain sourcetypes.conf as it is a
 machine-generated file that stores source type learning rules. props.conf
 should be used to define sourcetypes.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_splunk_launch_conf_black_list" time="0.000617">
      <system-out>Check that app does not contain splunk-launch.conf as it defines
 environment values used at startup time. System-wide environment variables
 should be left up to Splunk administrators.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_stanza_of_authentication_conf" time="0.00056">
      <system-out>Check that only role-mapping stanza is allowed in authenticaiton.conf as long as it doesn't map users to a cloud-internal role.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_telemetry_conf_black_list" time="0.000518">
      <system-out>Check that app does not contain telemetry.conf as it controls a
 Splunk-internal feature that should not be configured by apps.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_that_no_configurations_of_default_source_type_in_props_conf" time="0.000543">
      <system-out>Check that the app does not contain configurations of default source type in props.conf, 
 which will overwrite the configurations of default source types in system/default/props.conf 
 then it will affect other apps in splunk enterprise/cloud.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_that_passwords_conf_not_exist" time="0.00074">
      <system-out>Check that the app does not have default/passwords.conf, otherwise, warn it.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_user_seed_conf_black_list" time="0.000657">
      <system-out>Check that app does not contain user-seed.conf as it is used to
 preconfigure default login and password information.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_cloud_simple_app" name="check_wmi_conf_black_list" time="0.00089">
      <system-out>Check that app does not contain wmi.conf is as it is prohibited in
 Splunk Cloud due to its ability to configure Splunk to ingest data via
 Windows Management Instrumentation, which should be done via forwarder.
 Forwarders are not permitted in Splunk Cloud.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_default_values_for_modviz" time="0.000947">
      <system-out>check the property defined in spec file of README/savedsearches.conf.spec
 if the property is defined in spec file and does not provide a default value in
 default/savedsearches.conf, this check should fail.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_formatter_html_bad_nodes" time="0.000787">
      <system-out>Check appserver/static/visualizations/&lt;viz_name&gt;/formatter.html for bad nodes that
 are removed by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_formatter_html_comments" time="0.000563">
      <system-out>Check appserver/static/visualizations/&lt;viz_name&gt;/formatter.html for comments that
 are removed by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_formatter_html_css_expressions" time="0.00072">
      <system-out>Check appserver/static/visualizations/&lt;viz_name&gt;/formatter.html for css expressions from all &lt;style&gt; tags
 that are replaced by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_formatter_html_inappropriate_attributes" time="0.000637">
      <system-out>Check appserver/static/visualizations/&lt;viz_name&gt;/formatter.html for inappropriate attributes that
 are removed by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_formatter_html_inline_style_attributes" time="0.000669">
      <system-out>Check appserver/static/visualizations/&lt;viz_name&gt;/formatter.html for inline style attributes
 from all &lt;style&gt; tags that are removed by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js
 when rendered.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_matching_stanza_visualization_directory" time="0.000487">
      <system-out>Check that each custom visualization stanza in
 default/visualizations.conf has a matching directory in the
 appserver/static/visualizations/ directory.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_required_files_for_visualization" time="0.000533">
      <system-out>Check that each custom visualization stanza in
 default/visualizations.conf has some required source files in the
 appserver/static/visualizations/&lt;visualization_name&gt;/ directory.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_visualizations_directory" time="0.000479">
      <system-out>Check that custom visualizations have an
 appserver/static/visualizations/ directory.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_for_visualizations_preview_png" time="0.000687">
      <system-out>Check the required file appserver/static/visualizations/&lt;viz_name&gt;/preview.png
 exists for the visualization</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_visualizations" name="check_that_visualizations_conf_has_matching_default_meta_stanza" time="0.000763">
      <system-out>Check that each stanza in default/vizualizations.conf has a matching
 stanza in metadata/default.meta.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_limits_configuration_file" name="check_limits_conf" time="0.000612">
      <system-out>Check that default/limits.conf has not been included.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_outputs_configuration_file" name="check_if_outputs_conf_exists" time="0.000485">
      <system-out>Check that forwarding enabled in 'outputs.conf' is failed in cloud</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_5_0_deprecated_features" name="check_deprecated_eventtype_autodiscovering" time="0.000478">
      <system-out>Check that app does not use findtypes command. This command was for eventtype
 auto-discovering, which is deprecated in Splunk 5.0.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_5_0_deprecated_features" name="check_for_savedsearches_used_in_eventtypes_conf" time="0.000501">
      <system-out>Check that saved searches are not used within event types.
    https://docs.splunk.com/Documentation/Splunk/5.0/ReleaseNotes/Deprecatedfeatures
    https://docs.splunk.com/Documentation/Splunk/7.2.5/Knowledge/Abouteventtypes</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_0_deprecated_features" name="check_crawl_conf_black_list" time="0.000859">
      <system-out>Check that app does not contain crawl.conf as it was deprecated&amp;removed in Splunk.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_0_deprecated_features" name="check_for_viewstates_conf" time="0.000542">
      <system-out>Check that default/viewstates.conf does not exist in the app.
 (http://docs.splunk.com/Documentation/Splunk/6.0/AdvancedDev/Migration#Viewstates_are_no_longer_supported_in_simple_XML)</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_1_deprecated_features" name="check_for_datamodel_acceleration_endpoint_usage" time="0.000671">
      <system-out>Check that deprecated datamodel/acceleration is not used.
 https://docs.splunk.com/Documentation/Splunk/6.2.0/RESTREF/RESTknowledge</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_2_deprecated_features" name="check_for_dashboard_xml_list_element" time="0.000684">
      <system-out>Check Dashboard XML files for &lt;list&gt; element. &lt;list&gt; was deprecated in Splunk 6.2
 and removed in Splunk 6.5.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_2_deprecated_features" name="check_for_earliest_time_and_latest_time_elements_in_dashboard_xml" time="0.000795">
      <system-out>Check for the deprecated &lt;earliestTime&gt; and &lt;latestTime&gt; elements in dashboard XML files.
 As of version 6.2 these elements are replaced by &lt;earliest&gt; and &lt;latest&gt; elements.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_2_deprecated_features" name="check_for_populating_search_element_in_dashboard_xml" time="0.000617">
      <system-out>Check for the deprecated &lt;populatingSearch&gt; and &lt;populatingSavedSearch&gt; elements in dashboard XML files.
 Use the &lt;search&gt; element instead.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_2_deprecated_features" name="check_for_simple_xml_row_grouping" time="0.000513">
      <system-out>Check for the deprecated grouping attribute of row node in Simple XML files.
 Use the &lt;panel&gt; node instead.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_3_deprecated_features" name="check_for_django_bindings" time="0.00076">
      <system-out>Check for use of Django bindings.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_3_deprecated_features" name="check_for_run_script_alert_action" time="0.000764">
      <system-out>Check for use of running a script in alert action</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_3_deprecated_features" name="check_for_simple_xml_chart_element_with_deprecated_option_names" time="0.000762">
      <system-out>Check for Simple XML &lt;chart&gt; panels with deprecated options
 charting.axisLabelsY.majorTickSize or
 charting.axisLabelsY.majorLabelVisibility.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_3_deprecated_features" name="check_for_simple_xml_option_element_with_name_previewresults" time="0.00083">
      <system-out>Check for the deprecated &lt;option name='previewResults'&gt; in Simple XML
 files.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_3_deprecated_features" name="check_for_simple_xml_search_related_element" time="0.000664">
      <system-out>Check for the deprecated &lt;searchTemplate&gt;, &lt;searchString&gt;, &lt;searchName&gt;, 
 and &lt;searchPostProcess&gt; element in Simple XML files.
 Use the &lt;search&gt; element instead.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_3_deprecated_features" name="check_for_simple_xml_seed_element" time="0.000665">
      <system-out>Check for the deprecated &lt;seed&gt; option in Simple XML forms.
 Use the &lt;initialValue&gt; element instead.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_4_deprecated_features" name="check_for_noninteger_height_option" time="0.000511">
      <system-out>Check that &lt;option name="height"&gt; uses an integer for the value. Do not
 use &lt;option name="height"&gt;[value]px&lt;/option&gt;.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_4_deprecated_features" name="check_for_simple_xml_single_element_with_deprecated_option_names" time="0.000521">
      <system-out>Check Simple XML files for &lt;single&gt; panels with deprecated options
 'additionalClass', 'afterLabel', 'beforeLabel', 'classField', 'linkFields',
 'linkSearch', 'linkView'</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_4_deprecated_features" name="check_for_splunk_js_d3chartview" time="0.000413">
      <system-out>Checks that views are not importing d3chartview.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_4_deprecated_features" name="check_for_splunk_js_googlemapsview" time="0.000524">
      <system-out>Checks that views are not importing googlemapsview.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_4_deprecated_features" name="check_web_conf_for_simple_xml_force_flash_charting" time="0.000548">
      <system-out>Check that a web.conf does not use the property
 'simple_xml_force_flash_charting'.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_4_deprecated_features" name="check_web_conf_for_simple_xml_module_render" time="0.000681">
      <system-out>Check that web.conf does not use the simple_xml_module_render
 property.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_5_deprecated_features" name="check_for_dashboard_xml_option_element_with_deprecated_attribute_value" time="0.000715">
      <system-out>Check Dashboard XML files for &lt;option&gt; element with the deprecated option value "refresh.auto.interval"
 i.e. &lt;option name="refresh.auto.interval"&gt;</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_5_deprecated_features" name="check_for_splunk_js_header_and_footer_view" time="0.0005">
      <system-out>Checks that views are not importing splunkjs/mvc/headerview or splunkjs/mvc/footerrview.
 These are replaced by LayoutView in Splunk 6.5. LayoutView is not backwards compatible to Splunk 6.4 or earlier.
 Only use LayoutView if you are only targeting Splunk 6.5 or above.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_6_deprecated_features" name="check_for_app_install_endpoint" time="0.000584">
      <system-out>Check apps/appinstall usages</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_6_deprecated_features" name="check_for_autolb_setting_in_outputs_conf" time="0.000777">
      <system-out>Check removed support for setting autoLB in outputs.conf</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_6_6_deprecated_features" name="check_for_displayrownumbers_in_simple_xml" time="0.001093">
      <system-out>Check existence for displayRowNumbers option in simple xml. This option
 is no longer supported since Splunk 6.6.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_7_1_deprecated_features" name="check_for_input_command_usage" time="0.000891">
      <system-out>Check deprecated input command usage.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_7_2_deprecated_features" name="check_for_deprecated_literals_conf" time="0.0006">
      <system-out>Check deprecated literals.conf existence.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_7_3_deprecated_features" name="check_for_tscollect_command_usage" time="0.000605">
      <system-out>Check deprecated tscollect command usage.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_8_0_deprecated_features" name="check_for_advanced_xml_module_elements" time="0.00086">
      <system-out>Check that there is no Advanced XML, which was deprecated in Splunk Enterprise 6.3.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_8_0_deprecated_features" name="check_for_cherry_py_custom_controller_web_conf_endpoints" time="0.00068">
      <system-out>Check for the existence of custom CherryPy endpoints, which must be upgraded to be Python 3-compatible for the Splunk Enterprise 8.0.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_8_0_deprecated_features" name="check_for_existence_of_python_code_block_in_mako_template" time="0.000542">
      <system-out>Check for the existence of Python code block in Mako templates, which must be upgraded to be Python 3-compatible for the Splunk Enterprise 8.0.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_8_0_deprecated_features" name="check_for_python_script_existence" time="0.000718">
      <system-out>Check for the existence of Python scripts, which must be upgraded to be cross-compatible with Python 2 and 3 for Splunk Enterprise 8.0.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_8_0_deprecated_features" name="check_for_removed_m2crypto_usage" time="0.000593">
      <system-out>Check for the existence of the M2Crypto package usage, which is removed in the Splunk Enterprise 8.0.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_8_0_deprecated_features" name="check_for_reserved_filename_test_py" time="0.000874">
      <system-out>Check that there is no file named test.py, which is a reserved filename.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_splunk_8_0_deprecated_features" name="check_for_splunk_web_legacy_mode" time="0.000933">
      <system-out>Check that Splunk Web is not in Legacy Mode, which was deprecated in Splunk Enterprise 6.4.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_web_configuration_file" name="check_web_conf" time="0.000534">
      <system-out>Check that web.conf only defines [endpoint:] and [expose:]
 stanzas, with [expose:*] only containing pattern= and methods=.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_web_configuration_file" name="check_web_conf_expose_patterns_have_restmap_matches" time="0.000577">
      <system-out>Check that apps only expose web endpoints that are defined by
 the Splunk App within restmap.conf. Each web.conf
 [expose:] stanza should have the property pattern= which defines a url
 pattern to expose. Each url pattern exposed should correspond to a stanza
 within restmap.conf with a url pattern defined with the match=
 property, or for the case of [admin:] stanzas a combination of match= and
 members= properties.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_modular_inputs" name="check_inputs_conf" time="0.000521">
      <system-out>Check that a valid inputs.conf.spec file are located in the README/
 directory.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_modular_inputs" name="check_inputs_conf_spec_has_stanzas" time="0.000492">
      <system-out>Check that README/inputs.conf.spec contains stanzas.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_modular_inputs" name="check_inputs_conf_spec_has_no_duplicate_properties" time="0.000584">
      <system-out>Check that modular input stanzas do not contain duplicate arguments.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_modular_inputs" name="check_inputs_conf_spec_has_no_duplicate_stanzas" time="0.000607">
      <system-out>Check that modular inputs do not have duplicate stanzas.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_modular_inputs" name="check_inputs_conf_spec_stanza_args_broken_correctly" time="0.000687">
      <system-out>Check lines breaks are included in configuration when using a modular
 input.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_modular_inputs" name="check_inputs_conf_spec_stanzas_have_properties" time="0.000824">
      <system-out>Check that modular inputs specify arguments.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_modular_inputs" name="check_modular_inputs_scripts_exist" time="0.000924">
      <system-out>Check that there is a script file in bin/ for each modular input
 defined in README/inputs.conf.spec.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_json_files" name="check_validate_json_data_is_well_formed" time="0.000796">
      <system-out>Check that all JSON files are well formed.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_lookup_files" name="check_for_lookups_file_name" time="0.000856">
      <system-out>Check that "xxx" and "xxx.default" file/directory under lookups folder don't exist at the same time.
 When installing an App in Splunk Cloud, the lookup file "xxx" will be temporarily renamed with an extra
 '.default' extension. It will run into errors if "xxx.default" file already exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_lookup_files" name="check_lookup_csv_is_valid" time="0.000602">
      <system-out>Check that .csv files are not empty, have at least two columns, have
 headers with no more than 4096 characters, do not use Macintosh-style (\r)
 line endings, have the same number of columns in every row, and contain
 only UTF-8 characters.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_saved_search_conf_exists" time="0.000719">
      <system-out>Check that a savedsearches.conf file exists at
 default/savedsearches.conf.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_for_emails_in_saved_search" time="0.000667">
      <system-out>Check that email alerts (action.email.to) set in savedsearches.conf
 do not have a default value.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_for_empty_saved_search_description" time="0.000637">
      <system-out>Check that default/savedsearches.conf has no description properties
 that are empty.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_for_gratuitous_cron_scheduling" time="0.000626">
      <system-out>Check that default/savedsearches.conf searches are cron scheduled
 reasonably. Less than five asterisks should be used.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_for_real_time_saved_searches" time="0.000638">
      <system-out>Check that no real-time pre-index saved searches are being used in
 savedsearches.conf. Real-time per-index saved searches are extremely
 system intensive and should be avoided.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_for_real_time_saved_searches_for_cloud" time="0.000711">
      <system-out>Check that no real-time pre-index saved searches are being used in
 savedsearches.conf. Real-time per-index saved searches are extremely
 system intensive and should be avoided.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_for_sched_saved_searches_earliest_time" time="0.000664">
      <system-out>Check that if a scheduled saved search in savedsearch.conf contains dispatch.earliest_time option,
 or if a scheduled saved search with auto summary enabled contains auto_summarize.dispatch.earliest_time option</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_for_sched_saved_searches_latest_time" time="0.000746">
      <system-out>Check that if a savedsearch.conf stanza contains scheduling options
 it does contain a dispatch.latest_time</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_saved_search_specifies_a_search" time="0.000696">
      <system-out>Check that saved searches have a search string specified.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_saved_searches" name="check_saved_searches_are_not_disabled" time="0.000641">
      <system-out>Check that saved searches are enabled.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_app_configuration_file" name="check_app_version" time="0.000622">
      <system-out>Check that the app.conf contains an application version number in the
 [launcher] stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_app_configuration_file" name="check_for_invalid_app_names" time="0.000605">
      <system-out>Check that default/app.conf has author = &lt;some words are not about Splunk&gt; must not 
 has attributes label or description with values of Splunk App for XXXX.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_app_configuration_file" name="check_for_trigger_stanza" time="0.000581">
      <system-out>Check that default/app.conf doesn't have a reload.&lt;CONF_FILE&gt;, where CONF_FILE is
 a non-custom conf. (https://docs.splunk.com/Documentation/Splunk/7.3.0/Admin/Appconf#.5Btriggers.5D)</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_app_configuration_file" name="check_for_valid_package_id" time="0.000718">
      <system-out>Check that app.conf [package] stanza's has an valide 'id' value. 
 See https://docs.splunk.com/Documentation/Splunk/7.3.1/Admin/Appconf for details.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_app_configuration_file" name="check_no_install_source_checksum" time="0.00063">
      <system-out>Check in default/app.conf, install_source_checksum not be set explicitly.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_app_configuration_file" name="check_that_setup_has_not_been_performed" time="0.000751">
      <system-out>Check that default/app.conf setting is_configured = False.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_2x_dimensions" time="0.000599">
      <system-out>Check that static/appIcon_2x is 72x72px or less</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_2x_is_png" time="0.000634">
      <system-out>Check that static/appIcon_2x is a png file</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_alt_2x_dimensions" time="0.000576">
      <system-out>Check that static/appIconAlt_2x.png is 72x72px or less</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_alt_2x_is_png" time="0.000618">
      <system-out>Check that static/appIconAlt_2x is a png file</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_alt_dimensions" time="0.000728">
      <system-out>Check that static/appIconAlt.png is 36x36px or less</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_alt_is_png" time="0.000668">
      <system-out>Check that static/appIconAlt is a png file</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_dimensions" time="0.000692">
      <system-out>Check that static/appIcon is 36x36px or less</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_icon_is_png" time="0.000687">
      <system-out>Check that static/appIcon is a png file</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_logo_2x_dimensions" time="0.000626">
      <system-out>Check that static/appLogo_2x.png is 320x80px or less</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_logo_2x_is_png" time="0.000695">
      <system-out>Check that static/appLogo_2x is a png file</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_logo_dimensions" time="0.000671">
      <system-out>Check that static/appLogo.png is 160x40px or less</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_content" name="check_app_logo_is_png" time="0.000649">
      <system-out>Check that static/appLogo is a png file</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_structure" name="check_that_local_does_not_exist" time="0.005689">
      <system-out>Check that the 'local' directory does not exist. All configuration
 should be in the 'default' directory.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_structure" name="check_filenames_for_spaces" time="0.00114">
      <system-out>Check that app has no .conf or dashboard filenames that contain spaces.
 Splunk software does not support such files.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_structure" name="check_for_local_meta" time="0.000824">
      <system-out>Check that the file 'local.meta' does not exist. All metadata
 permissions should be set in 'default.meta'.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_structure" name="check_splunklib_dependency_under_bin_folder" time="0.000831">
      <system-out>Check splunklib dependency should not be placed under app's bin folder. Please refer to
 https://dev.splunk.com/view/SP-CAAAER3 and https://dev.splunk.com/view/SP-CAAAEU2 for more details/examples.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_structure" name="check_that_app_name_config_is_valid" time="0.000986">
      <system-out>Check that the app name does not start with digits</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_structure" name="check_that_directory_name_matches_package_id" time="0.000974">
      <system-out>Check that when decompressed the Splunk App directory name matches the
 app.conf [package] stanza's id property.
 For cloud, id property must exists;
 For others, it's ok if no id property if 'check_for_updates = True' or no 'check_for_updates'.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_application_structure" name="check_that_local_passwords_conf_does_not_exist" time="0.000753">
      <system-out>Check that local/passwords.conf does not exist. Password files are not
 transferable between instances.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_configuration_files" name="check_config_file_parsing" time="0.000973">
      <system-out>Check that all config files parse cleanly- no trailing whitespace after
 continuations, no duplicated stanzas or options.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_configuration_files" name="check_manipulation_outside_of_app_container" time="0.000684">
      <system-out>Check that app conf files do not point to files outside the app container. 
 Because hard-coded paths won't work in Splunk Cloud, we don't consider to 
 check absolute paths.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_configuration_files" name="check_no_default_stanzas" time="0.000867">
      <system-out>Check that app does not contain any .conf files that create global
 definitions using the [default] stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_configuration_files" name="check_validate_no_duplicate_stanzas_in_conf_files" time="0.000676">
      <system-out>Check that no duplicate
 stanzas exist in .conf files.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_indexes_configuration_file" name="check_index_definition_has_required_options" time="0.000671">
      <system-out>Check that all index definitions exist all required options including:
 homePath, coldPath, and thawedPath.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_indexes_configuration_file" name="check_indexes_conf_does_not_exist" time="0.000599">
      <system-out>Check that the app does not create indexes.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_indexes_configuration_file" name="check_indexes_conf_properties" time="0.000742">
      <system-out>Check that indexes.conf only contains the required 'homePath' , 'coldPath', and 'thawedPath' properties
 or the optional 'frozenTimePeriodInSecs', 'disabled', 'datatype' and 'repFactor' properties.
 All other properties are prohibited.
 This check is cloud only because indexes are not allowed via check_indexes_conf_does_not_exist.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_indexes_configuration_file" name="check_validate_default_indexes_not_modified" time="0.000759">
      <system-out>Check that no default Splunk indexes are modified by the app.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_meta_files" name="check_meta_file_parsing" time="0.000661">
      <system-out>Check that all .meta files parse with no trailing whitespace after
 continuations with no duplicate stanzas or options.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_meta_files" name="check_validate_no_duplicate_stanzas_in_meta_files" time="0.000667">
      <system-out>Check that .meta files do not have duplicate
 stanzas.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_props_configuration_file" name="check_props_conf_has_report_option_and_transforms_conf_exist" time="0.000709">
      <system-out>Check that there is a 'transforms.conf' file when REPORT- options are
 defined in props.conf.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_props_configuration_file" name="check_props_conf_has_report_option_and_transforms_conf_has_matching_stanza" time="0.000752">
      <system-out>Check that each REPORT- in props.conf has an associated stanza in
 transforms.conf file.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_props_configuration_file" name="check_props_conf_has_report_option_and_transforms_conf_has_required_option" time="0.000857">
      <system-out>Check that REPORT- options in props.conf, have either DELIMS or REGEX
 options in the matching transforms.conf stanza.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_props_configuration_file" name="check_props_conf_has_transforms_option_and_transforms_conf_exist" time="0.000934">
      <system-out>Check that there is a 'transforms.conf' file when TRANSFORM- options
 are defined in props.conf.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_props_configuration_file" name="check_props_conf_has_transforms_option_and_transforms_conf_has_matching_stanza" time="0.001019">
      <system-out>Check that TRANSFORM- options in props.conf have associated stanzas in
 transforms.conf file.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_props_configuration_file" name="check_props_conf_regex_stanza_name_followed_by_double_colon" time="0.000985">
      <system-out>Check that the props.conf stanzas (delayedrule, host, rule, or source)
 are followed by ::.
For example:

[host::nyc*]
[rule::bar_some]
</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_server_configuration_file" name="check_server_conf_only_contains_custom_conf_sync_stanzas_or_diag_stanza" time="0.000526">
      <system-out>Check that server.conf in an app is only allowed to contain:
 1) conf_replication_include.\&lt;custom_conf_files&gt; in [shclustering] stanza
 2) or EXCLUDE-\&lt;class&gt; property in [diag] stanza</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_transforms_configuration_file" name="check_all_lookups_are_used" time="0.001056">
      <system-out>Check that all files in the /lookups directory are referenced in
 transforms.conf.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_transforms_configuration_file" name="check_capture_groups_in_transforms" time="0.001076">
      <system-out>Check that all capture groups are used in transforms.conf.
 Groups not used for capturing should use the
 non-capture group syntax</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_alert_actions_config" name="check_alert_actions_conf_exists" time="0.000514">
      <system-out>Check that a valid alert_actions.conf file exists at
 default/alert_actions.conf.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_alert_actions_config" name="check_alert_icon_exists_for_custom_alerts" time="0.000478">
      <system-out>Check that icon files defined for alert actions in alert_actions.conf
 exist.
 Custom Alert Action Component Reference</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_alert_actions_config" name="check_for_payload_format" time="0.000523">
      <system-out>Check that each custom alert action's payload format has a value of xml
 or json.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_alert_actions_config" name="check_workflow_html_exists_for_custom_alert" time="0.000643">
      <system-out>Check that each custom alert action has an associated html file.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_commands" name="check_command_conf_exists" time="0.000493">
      <system-out>Check that commands.conf exists at default/commands.conf.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_commands" name="check_default_meta_exists" time="0.000518">
      <system-out>Check that a valid
 default.meta
 file exists when using a custom search command.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_commands" name="check_ignored_parameters_v1_command" time="0.000647">
      <system-out>Check that the custom commands attributes maxwait and maxchunksize
 are only used when chunked = true.
 Commands.conf reference</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_commands" name="check_ignored_parameters_v2_command" time="0.00061">
      <system-out>Check for ignored arguments in commands.conf when chunked=true.
 Commands.conf reference</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_commands" name="check_passauth_and_enableheader" time="0.000724">
      <system-out>Check that custom search commands using passauth have enableheader
 set to true.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_commands" name="check_requires_preop_and_streaming_preop" time="0.00065">
      <system-out>Check that custom search commands using requires_preop have
 streaming_preop set to true.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_custom_commands" name="check_requires_srinfo_and_enableheader" time="0.000588">
      <system-out>Check that custom search commands using requires_srinfo have
 enableheader set to true.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_workflow_actions" name="check_required_stanza_fields_are_specified" time="0.000466">
      <system-out>Check that stanzas in workflow_actions.conf.spec have the required
 fields, type, and label.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_workflow_actions" name="check_workflow_actions_conf_exists" time="0.000627">
      <system-out>Check that a valid workflow_actions.conf file exists at
 default/workflow_actions.conf.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_workflow_actions" name="check_workflow_actions_link_uri_does_not_use_http_protocol" time="0.000592">
      <system-out>Check that for each workflow action in workflow_actions.conf the
 link.uri property uses the https protocol for external links. Unencrypted
 http is permitted for internal links.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_rest_endpoints" name="check_restmap_conf_exists" time="0.000593">
      <system-out>Check that restmap.conf file exists at default/restmap.conf when
 using REST endpoints.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_rest_endpoints" name="check_rest_handler_scripts_exist" time="0.000731">
      <system-out>Check that each stanza in restmap.conf has a matching handler script.
 if not, fail this app.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_rest_endpoints" name="check_rest_handler_scripts_exist_for_cloud" time="0.000817">
      <system-out>Check that each stanza in restmap.conf has a matching handler script.
 if not, throw a warning.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_data_models_config" name="check_validate_data_models_conf_file_in_correct_locations" time="0.000503">
      <system-out>Check that when using data models, the datamodels.conf file only exists
 in the default directory.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_data_models_config" name="check_for_datamodel_acceleration" time="0.000596">
      <system-out>Check that the use of accelerated data models do not occur. If data model
 acceleration is required, developers should provide directions in documentation
 for how to accelerate data models from within the Splunk Web GUI.
data model acceleration</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_data_models_config" name="check_validate_no_missing_json_data" time="0.000924">
      <system-out>Check that each stanza in
 datamodels.conf
 has a matching JSON file in default/data/models/.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_appserver_folder_exist" time="0.000621">
      <system-out>Check that the appserver/ directory exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_app_conf_file_exist" time="0.000514">
      <system-out>Check that the default/app.conf file exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_deep_dive_drilldowns_conf_file_exist" time="0.000758">
      <system-out>Check that the default/deep_dive_drilldowns.conf file exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_folder_exist" time="0.000651">
      <system-out>Check that the default/ directory exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_inputs_conf_file_exist" time="0.000883">
      <system-out>Check that the default/inputs.conf file exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_itsi_kpi_base_search_conf_file_exit" time="0.000927">
      <system-out>Check that the default/itsi_kpi_base_search.conf file exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_itsi_kpi_template_conf_file_exit" time="0.000856">
      <system-out>Check that the default/itsi_kpi_template.conf file exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_itsi_service_template_conf_file_exist" time="0.000887">
      <system-out>Check that default/itsi_service_template.conf file exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_default_savedsearches_conf_file_exit" time="0.000637">
      <system-out>Check that the default/savedsearches.conf file exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_itsi_module_file_structure" name="check_metadata_folder_exist" time="0.000983">
      <system-out>Check that the metadata/ directory exists.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_python_files" name="check_for_compiled_python" time="0.000924">
      <system-out>Check that there are no .pyc or .pyo files included in the app.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_python_files" name="check_for_python_udp_network_communications" time="0.000593">
      <system-out>Check for UDP network communication</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_python_files" name="check_for_root_privilege_escalation" time="0.000692">
      <system-out>Check possible root privilege escalation</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_malware" name="check_hostnames_and_ips" time="0.000513">
      <system-out>Check that no sensitive hostnames/IPs are stored in the app.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_potentially_harmful_operations" name="check_destructive_commands" time="0.000566">
      <system-out>Check for the use of malicious shell commands in configuration files or shell scripts to
 corrupt the OS or Splunk instance. Other scripting languages are covered by other checks.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_security" name="check_for_sensitive_info_in_url" time="0.000432">
      <system-out>Check for sensitive information being exposed in transit via URL query string parameters</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_source_and_binaries" name="check_for_bin_files" time="0.000593">
      <system-out>Check that files outside of the bin/ and appserver/controllers directory do not have execute
 permissions and are not .exe files. Splunk recommends 644 for all app files
 outside of the bin/ directory, 644 for scripts within the bin/ directory
 that are invoked using an interpreter (e.g. python my_script.py or
 sh my_script.sh), and 755 for scripts within the bin/ directory that are
 invoked directly (e.g. ./my_script.sh or ./my_script).</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_source_and_binaries" name="check_for_expansive_permissions" time="0.000666">
      <system-out>Check that no files have *nix write permissions for all users
 (xx2, xx6, xx7). Splunk recommends 644 for all app files outside of the
 bin/ directory, 644 for scripts within the bin/ directory that are
 invoked using an interpreter (e.g. python my_script.py or
 sh my_script.sh), and 755 for scripts within the bin/ directory that are
 invoked directly (e.g. ./my_script.sh or ./my_script).
 Since appinspect 1.6.1, check that no files have nt write permissions for all users.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_source_and_binaries" name="check_requires_adobe_flash" time="0.000438">
      <system-out>Check that the app does not use Adobe Flash files.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_documentation_standards" name="check_basic_readme" time="0.00051">
      <system-out>Check that the app has a &lt;APP_DIR&gt;/README file that includes
 version support, system requirements, installation, configuration,
 troubleshooting and running of the app, or a link to online documentation.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_support_and_installation_standards" name="check_that_json_schema_is_applicable" time="0.00047">
      <system-out>If json schema is 2.0.0 in app.manifest then warn it.
 Because schema version of 2.0.0 is not yet compatible with any versions 
 of the Splunk Cloud. So far, all cloud stack are 7.0 and lower but 
 Json Schema 2.0.0 is only compatible with Splunk 7.1+.</system-out>
      <skipped/>
    </testcase>
    <testcase classname="check_xml_files" name="check_that_all_xml_files_are_well_formed" time="0.000428">
      <system-out>Check that all XML files are well-formed.</system-out>
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>
